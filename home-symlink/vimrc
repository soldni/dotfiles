" NOTE -- THERE IS NOT NO COPYING WITH "d",
" USE "m" FOR THAT (thanks, EasyClip!)

" syntax and color scheme
syntax enable
let base16colorspace=256  " Access colors present in 256 colorspace

" In normal mode, press Tab or Shift-Tab to adjust the indent on the current
" line and position the cursor on the first nonblank character; in insert
" mode, press Shift-Tab to unindent; in visual mode, press Tab or Shift-Tab to
" adjust the indent on selected lines.
" from https://vim.fandom.com/wiki/Shifting_blocks_visually
nnoremap <Tab> >>_
nnoremap <S-Tab> <<_
inoremap <S-Tab> <C-D>
vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

" store swap files in a centralized location instead
" that all over the files system
set directory^=$HOME/.vim/tmp/

" ignore compatibility with vi
set nocompatible

if has('win32') || has('win64')
    set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
endif

" autoindent
filetype off                  " required
filetype plugin indent on

" toggle between paste modes
nnoremap <F2> :set invpaste paste?<CR>
set pastetoggle=<F2>
set showmode

" Show line numbers (is it even a text editor w/o them?!
set number

" disable the fucking bell
set t_vb=
set visualbell

" remove all trailing spaces on save
autocmd BufWritePre * :%s/\(\s\|\r\)\+$//e

" enable forward delete in os x
inoremap <C-d> <Del>

" Map Ctrl-A -> Start of line, Ctrl-E -> End of line
" (damn macOS trained my muscle memory to expect emacs
" shortcuts for begin/end line everywhere!)
map <C-a> <Home>
map <C-e> <End>
imap <C-a> <Home>
imap <C-e> <End>
inoremap <C-a> <Home>
inoremap <C-e> <End>

"rremap ':' to ';'
nmap ; :

"enable mouse
set mouse=a

"move forward with f
map     f   e

" " Leaving this here for reference
" if v:version >= 704 && has("unix")
"     let s:uname = system("uname")
"     let s:uname_full = system("cat /etc/*-release")
"     if s:uname == "Darwin\n"
"         set clipboard=unnamed
"     elseif s:uname_full =~ "Amazon Linux"
"         " dev-desktop doesn't like unnamed clipboard
"         set clipboard=
"     else
"         set clipboard=unnamedplus
"     endif
" else
"     set clipboard=unnamed
" endif

" remap ctrl + w by itself to nothing
inoremap <C-w> <Nop>

" Quickly edit/reload the vimrc file
nmap <silent> <leader-e> :e $MYVIMRC<CR>
nmap <silent> <leader-r> :so $MYVIMRC<CR>

" Reverse colors on selection
hi Visual term=reverse cterm=reverse guibg=Grey

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" Set a color column to signal end of a file
" set colorcolumn=80
highlight colorcolumn ctermbg=Black
highlight colorcolumn guibg=Black

" save by ctrl+s
noremap <silent> <C-s>          :update<CR>
vnoremap <silent> <C-s>         <C-C>:update<CR>
inoremap <silent> <C-s>         <C-O>:update<CR>

" set Ctrl + q to close vim
noremap <silent> <C-q>          :q<CR>
vnoremap <silent> <C-q>         <C-C>:q<CR>
inoremap <silent> <C-q>         <C-O>:q<CR>

" set leader key shortcuts
let mapleader = "`"

" use soft tabs of size 4
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting

set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                    "    case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                    "    shiftwidth, not tabstop

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class


" new horizontal split should open below, new vertical
" split should open to the right
set splitright
set splitbelow

" use U for redo
nmap U <c-r>

" removes scrollbar in Gui VIM
set guioptions-=r

" activate incremental search"
set incsearch

" sudo write
ca w!! w !sudo tee >/dev/null "%"

" open a new tab with shift+O
nnoremap <C-o>  :edit<Space>
nnoremap <S-o>  :tabe<Space>

" unbind C-T so that it can be reused later
nnoremap <C-T>  <NOP>
inoremap <C-T>  <NOP>
vnoremap <C-T>  <NOP>

" easier tab navigation
nnoremap <C-T><Left>      :tabprevious<CR>
nnoremap <C-T><Right>     :tabnext<CR>
inoremap <C-T><Left>      <C-C>:tabprevious<CR>
inoremap <C-T><Right>     <C-C>:tabnext<CR>
vnoremap <C-T><Left>      <C-C>:tabprevious<CR>
vnoremap <C-T><Right>     <C-C>:tabnext<CR>

" easier splits navigation
nnoremap <C-W><Down>      <C-W><C-J>
nnoremap <C-W><Up>        <C-W><C-K>
nnoremap <C-W><Left>      <C-W><C-L>
nnoremap <C-W><Right>     <C-W><C-H>

" open a new horizontal split with ", vertical with %
" this is like tmux!
nnoremap <C-w>"     <C-W>n
nnoremap <C-w>%     :vnew<CR>

" Toggle explorer with ctrl x


" Old shortcut (only opens)
" nnoremap <C-x>     :Explore<CR>

" Map multiple escape sequences to <Esc>
:inoremap <Esc> <Esc><Esc>
